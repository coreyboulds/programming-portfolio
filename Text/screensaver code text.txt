Line l1, l2, l3;


void setup() {
  background(0);
  size(displayWidth, displayHeight);
  l1 = new Line(random(width), random(height));
  l2 = new Line(random(width), random(height));
  l3 = new Line(random(width), random(height));
  
}

void draw() {
  l1.display();
  l2.display();
  l3.display();
  
}


class Line {
  // Member variables
  float xpos, ypos, strokeW, pointCount;

  //constructor
  Line(float tempX, float tempY) {
    xpos = tempX;
    ypos = tempY;
  }


  //display method
  void display() {
    if (frameCount>500) {
      frameCount = 0;
      background(0);
    }

    strokeW = random(1, 5);
    pointCount = random(1, 40);
    stroke(random(0), random(255), random(0));

    strokeWeight(strokeW);
    int rand = int(random(4));
    if (xpos<0 || xpos>width || ypos<0 || ypos>height) {
      xpos = random(width);
      ypos = random(height);
    } else {


      if (rand == 0) {
        moveRight(xpos, ypos, pointCount);
      } else if (rand == 1) {
        moveUp(xpos, ypos, pointCount);
      } else if (rand == 2) {
        moveLeft(xpos, ypos, pointCount);
      } else {
        moveDown(xpos, ypos, pointCount);
      }
    }
  }

  //movement method
  void moveRight(float startX, float startY, float moveCount) {
    for (float i=0; i<moveCount; i++) {
      point(startX+i, startY);
      xpos = startX + i;
      ypos = startY;
    }
  }

  void moveLeft(float startX, float startY, float moveCount) {
    for (float i=0; i<moveCount; i++) {
      point(startX-i, startY);
      xpos = startX - i;
      ypos = startY;
    }
  }

  void moveUp(float startX, float startY, float moveCount) {
    for (float i=0; i<moveCount; i++) {
      point(startX, startY+i);
      xpos = startX;
      ypos = startY - i;
    }
  }

  void moveDown(float startX, float startY, float moveCount) {
    for (float i=0; i<moveCount; i++) {
      point(startX, startY-i);
      xpos = startX;
      ypos = startY+i;
    }
  }
}
